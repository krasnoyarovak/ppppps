#include <iostream>
#include <math.h>
#include <string>
using namespace std;
int main() {
	setlocale(LC_ALL, "Rus");
	int n, n_1, p;
	string N, N_1 = "";
	char s[] = "0123456789ABCDEF";
	string s_1 = "0123456789ABCDEF";
	cout << "Введите целое положительное число в десятичной системе счисления (1): " << endl;
	cin >> n;
	cout << "Введите целое положительное число в десятичной системе счисления (2): " << endl;
	cin >> n_1;
	cout << "Введите основание новой системы счисления (2 <= p <= 16): " << endl;
	cin >> p;

	//поскольку дальше идут преобразования, для вывода ответа создаю дубликаты наших чисел
	int dubl_n = n, dubl_n_1 = n_1;

	if (n == 0) N = "0";
	// преобразуем числа в систему счисления, введенную пользователем
	while (n > 0) {
		N = s[n % p] + N;
		n /= p;
	}
	if (n_1 == 0) N_1 = "0";
	while (n_1 > 0) {
		N_1 = s[n_1 % p] + N_1;
		n_1 /= p;
	}
	//поскольку далее идут преобразования, для вывода ответа создаю дубликаты 
	string chisl_1 = N, chisl_2 = N_1;

	//выполним сложение преобразованных чисел в столбик

	string sum = ""; //строка, в которой будет храниться сумма чисел
	int razm = fabs(N_1.size() - N.size());
	//добавляю нули к строке для того, чтобы их размер совпадал
	if (N_1.size() > N.size()) {
		for (int i = 0; i < razm; i++) {
			N = "0" + N;
		}
	}
	else {
		for (int i = 0; i < razm; i++) {
			N_1 = "0" + N_1;
		}
	}
	
	int r = 0;
	for (int i = N.size(); i > 0; i--) { //создаем цикл, который будет проходится по каждому элементу строк
		int elem = r + s_1.find(N[i]) + s_1.find(N_1[i]);  //условие: если сумма чисел и сумма остатка больше основания сс, то к строке суммы прибавляем остаток от деления на основание сс
		sum = s_1[elem % p] + sum;
		r = elem / p;
	}
	if (r == 1) sum = "1" + sum;
	cout << dubl_n << "(10)" << "+" << dubl_n_1 << "(10)" << "=" << chisl_1 << "(" << p << ")" << "+" << chisl_2 << "(" << p << ")" << " = " << sum;
	return 0;
}
